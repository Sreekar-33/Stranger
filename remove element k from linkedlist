//removing element k form the linked list even if the k is repeated more than once in the given linked list



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
    
        if(head==null)
            return null;
       while(head!=null) 
       {   
        if(head.val==val)
            head=head.next;
         else
             break;
       }
       ListNode cur=head;   
        ListNode prev=head;

        
        while(cur!=null)
        {
            if(cur.val==val)
            {
              prev.next=cur.next;
                cur.next=null;
                cur=prev.next;
            }
            else{
           prev=cur;
            cur=cur.next;
            }
            
        }
//         if(cur.val==val)
//         {
//           prev.next=null;
//         }
       
        return head;
         
        
    }
}
